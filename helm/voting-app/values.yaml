global:
  namespace: voting-app-assignment

# Redis helm settings
redis:
  image:
    debug: true
  global:
    redis:
      password: password
  architecture: standalone
  
# Postgres helm settings
postgresql:
  postgresqlUsername: postgres
  postgresqlPassword: password
  postgresqlDatabase: voting-app-db

worker:
  replicas: 1
  image: 
    repository: 292526779943.dkr.ecr.eu-central-1.amazonaws.com/app/worker
    tag: latest
  imagePullPolicy: Always
  env:
  - name: POSTGRES_HOST
    value: "voting-app-postgresql"
  - name: REDIS_HOST
    value: "voting-app-redis-master"
  labels:
    name:  worker-deploy
  resources:
    limits:
      memory: "128Mi"
      cpu: "100m"

votingapp:
  deploy:
    replicas: 3
    labels:
      name: voting-app-deploy
    template:
      metadata:
        labels:
          name: voting-app-pod
          type: frontend
      spec:
        containers:
        - name: voting-app-pod
          image:
            repository: 292526779943.dkr.ecr.eu-central-1.amazonaws.com/app/vote-app
            tag: latest
          imagePullPolicy: Always
          env:
          - name: REDIS_HOST
            value: "voting-app-redis-master"
          ports:
          - containerPort: 80
          resources:
            limits:
              memory: "64Mi"
              cpu: "50m"
  service:
    labels:
      name: voting-app-service
    ports:
    - port:  80
      targetPort:  80

resultapp:
  deploy:
    replicas: 3
    labels:
      name: result-app-deploy
    template:
      metadata:
        labels:
          name: result-app-pod
          type: frontend
      spec:
        containers:
        - name: result-app-pod
          image: 
            repository: 292526779943.dkr.ecr.eu-central-1.amazonaws.com/app/result-app
            tag: latest
          imagePullPolicy: Always
          env:
          - name: POSTGRES_HOST
            value: "voting-app-postgresql"
          ports:
          - containerPort: 80
          resources:
            limits:
              memory: "64Mi"
              cpu: "50m"
  service:
    labels:
      name: result-app-service
    ports:
    - port:  80
      targetPort:  80

appingress:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels: 
    name: voting-appingress
  rules:
  - host: result.app.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: result-app-service
              port:
                number: 80
  - host: vote.app.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: voting-app-service
              port:
                number: 80